#!/bin/bash
set -e

DOT_DIRECTORY="${HOME}/dotfiles"

has() {
  type "$1" > /dev/null 2>&1
}

checkOS() {
  if [ "$(uname)" == 'Darwin' ]; then
    OS='Mac'
  elif [ "$(expr substr $(uname -s) 1 5)" == 'Linux' ]; then
    OS='Linux'
  elif [ "$(expr substr $(uname -s) 1 10)" == 'MINGW32_NT' ]; then
    OS='Cygwin'
  else
    echo "Your platform ($(uname -a)) is not supported."
    exit 1
  fi
}

checkOS

if [ "$(basename ${BASH_SOURCE:-$0})" = "include.sh" ]; then
  return
fi

DOT_TARBALL="https://github.com/akinobu-tani/dotfiles/tarball/master"
REMOTE_URL="git@github.com:akinobu-tani/dotfiles.git"

usage() {
  name=`basename $0`
  cat <<EOF
Usage:
  $name [arguments] [command]
Commands:
  init
Arguments:
  -f $(tput setaf 1)** warning **$(tput sgr0) Overwrite dotfiles.
  -h Print help (this message)
EOF
  exit 1
}

link_files() {
  for file_path in ${DOT_DIRECTORY}/.??*; do
    file_name=`basename ${file_path}`

    [[ ${file_name} = ".git" ]] && continue
    [[ ${file_name} = ".gitignore" ]] && continue

    ln -snfv ${file_path} ${HOME}/${file_name}
  done

  ln -snfv ${DOT_DIRECTORY}/bin ${HOME}/bin

  if [ "${OS}" == 'Mac' ]; then
    for file_path in ${DOT_DIRECTORY}/mac/.??*; do
      file_name=`basename ${file_path}`

      ln -snfv ${file_path} ${HOME}/${file_name}
    done

    rm -rf "${HOME}/Library/Application Support/Sublime Text 3/Packages/User"
    ln -snfv "${DOT_DIRECTORY}/etc/sublime/mac/User" "${HOME}/Library/Application Support/Sublime Text 3/Packages/User"
  fi

  echo "$(tput setaf 2)Deploy dotfiles complete!.$(tput sgr0)"
}

initialize() {
  echo "Initializeing dotfiles..."

  bash ${DOT_DIRECTORY}/etc/init/init.sh

  echo "Initializeing Finish !!"
}

while getopts :f:h opt; do
  case ${opt} in
    f)
      OVERWRITE=true
      ;;
    h)
      usage
      ;;
  esac
done
shift $((OPTIND - 1))

if [ -n "${OVERWRITE}" -o ! -d ${DOT_DIRECTORY} ]; then
  echo "Downloading dotfiles..."
  rm -rf ${DOT_DIRECTORY}
  mkdir ${DOT_DIRECTORY}

  if has "git"; then
    git clone --recursive "${REMOTE_URL}" "${DOT_DIRECTORY}"
  else
    curl -fsSLo ${HOME}/dotfiles.tar.gz ${DOT_TARBALL}
    tar -zxf ${HOME}/dotfiles.tar.gz --strip-components 1 -C ${DOT_DIRECTORY}
    rm -f ${HOME}/dotfiles.tar.gz
  fi

  echo "$(tput setaf 2)Download dotfiles complete!.$(tput sgr0)"
fi

link_files

command=$1
[ $# -gt 0 ] && shift

case $command in
  init*)
    initialize
    ;;
  *)
    ;;
esac

exit 0
